# Interactive Map
library("tidyverse")
library("leaflet")
library(dplyr)
library(shiny)
library(htmlwidgets)
p4h <- read_csv("/Users/scottmiller/Desktop/ShinyMap/P4H_coord.csv")
p4h <- p4h %>% separate(GPS, c("Longitude","Latitude"), sep = ',')
p4h$Latitude <- as.numeric(p4h$Latitude)
p4h$Longitude <- as.numeric(p4h$Longitude)
p4h <- p4h[-61,]
write.csv("/Users/scottmiller/Desktop/ShinyMap/P4H_coord.csv")
write.csv(p4h, "/Users/scottmiller/Desktop/ShinyMap/P4H_coord.csv")
# Interactive Map Shiny App
library(shiny)
library(leaflet)
r_colors <- rgb(t(col2rgb(colors()) / 255))
names(r_colors) <- colors()
p4h <- read.csv("/Users/scottmiller/Desktop/ShinyMap/P4H_coord.csv")
ui <- fluidPage(
leafletOutput("mymap"),
p()
)
server <- function(input, output, session) {
output$mymap <- renderLeaflet({
p4h %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addLayersControl(baseGroups = c("Toner Lite", "World Imagery")) %>%
addCircleMarkers(label = p4h$School, radius = 7, opacity = .5, fillOpacity = .5,
clusterOptions = markerClusterOptions(showCoverageOnHover = FALSE),
popup = paste("Average pre-test score: ",p4h$Pre, "<br>", "Average post-test score: ", p4h$Post)) %>%
setView(lat = 19.01228, lng = -72.94282, zoom = 8)
})
}
shinyApp(ui, server)
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='scottmmiller',
token='9E4A7A80E0654B34BB0D9295B9483504',
secret='<SECRET>')
rsconnect::setAccountInfo(name='scottmmiller',
token='9E4A7A80E0654B34BB0D9295B9483504',
secret='<SECRET>')
rsconnect::setAccountInfo(name='scottmmiller',
token='9E4A7A80E0654B34BB0D9295B9483504',
secret='/ArgkXOQBa/WC1XxvIhZra1YT9BcA4teJ1zCklo1')
library(rsconnect)
rsconnect::deployApp('/Users/scottmiller/Desktop/ShinyMap/ShinyMap.R')
rsconnect::deployApp('/Users/scottmiller/Desktop/ShinyMap')
rsconnect::deployApp('/Users/scottmiller/Desktop/ShinyMap')
rsconnect::deployApp('/Users/scottmiller/Desktop/ShinyMap')
n
rsconnect::deployApp('/Users/scottmiller/Desktop/ShinyMap/App.R')
rsconnect::deployApp('/Users/scottmiller/Desktop/ShinyMap/')
y
rsconnect::deployApp('/Users/scottmiller/Desktop/ShinyMap/')
rsconnect::deployApp('/Users/scottmiller/Desktop/ShinyMap')
rsconnect::deployApp('/Users/scottmiller/Desktop/ShinyMap')
# Interactive Map Shiny App
library(shiny)
library(leaflet)
p4h <- read.csv("P4H_coord.csv")
ui <- fluidPage(
leafletOutput("mymap"),
p()
)
server <- function(input, output, session) {
output$mymap <- renderLeaflet({
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addLayersControl(baseGroups = c("Toner Lite", "World Imagery")) %>%
addCircleMarkers(label = p4h$School, radius = 7, opacity = .5, fillOpacity = .5,
clusterOptions = markerClusterOptions(showCoverageOnHover = FALSE),
popup = paste("Average pre-test score: ",p4h$Pre, "<br>", "Average post-test score: ", p4h$Post)) %>%
setView(lat = 19.01228, lng = -72.94282, zoom = 8)
})
}
shinyApp(ui, server)
# Interactive Map Shiny App
library(shiny)
library(leaflet)
p4h <- read.csv("Data/P4H_coord.csv")
ui <- fluidPage(
leafletOutput("mymap"),
p()
)
server <- function(input, output, session) {
output$mymap <- renderLeaflet({
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addLayersControl(baseGroups = c("Toner Lite", "World Imagery")) %>%
addCircleMarkers(label = p4h$School, radius = 7, opacity = .5, fillOpacity = .5,
clusterOptions = markerClusterOptions(showCoverageOnHover = FALSE),
popup = paste("Average pre-test score: ",p4h$Pre, "<br>", "Average post-test score: ", p4h$Post)) %>%
setView(lat = 19.01228, lng = -72.94282, zoom = 8)
})
}
shinyApp(ui, server)
# Interactive Map Shiny App
library(shiny)
library(leaflet)
p4h <- read.csv("/Users/scottmiller/Desktop/ShinyMap/Data/P4H_coord.csv")
ui <- fluidPage(
leafletOutput("mymap"),
p()
)
server <- function(input, output, session) {
output$mymap <- renderLeaflet({
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addLayersControl(baseGroups = c("Toner Lite", "World Imagery")) %>%
addCircleMarkers(label = p4h$School, radius = 7, opacity = .5, fillOpacity = .5,
clusterOptions = markerClusterOptions(showCoverageOnHover = FALSE),
popup = paste("Average pre-test score: ",p4h$Pre, "<br>", "Average post-test score: ", p4h$Post)) %>%
setView(lat = 19.01228, lng = -72.94282, zoom = 8)
})
}
shinyApp(ui, server)
View(p4h)
View(p4h)
p4h <- read_csv("/Users/scottmiller/Desktop/ShinyMap/P4H_coord.csv")
P4H_Interactive <- p4h %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addLayersControl(baseGroups = c("Toner Lite", "World Imagery")) %>%
addCircleMarkers(label = p4h$School, radius = 7, opacity = .5, fillOpacity = .5,
clusterOptions = markerClusterOptions(showCoverageOnHover = FALSE),
popup = paste("Average pre-test score: ",p4h$Pre, "<br>", "Average post-test score: ", p4h$Post)) %>%
setView(lat = 19.01228, lng = -72.94282, zoom = 8)
p4h <- read.csv("/Users/scottmiller/Desktop/ShinyMap/Data/P4H_coord.csv")
P4H_Interactive <- p4h %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addLayersControl(baseGroups = c("Toner Lite", "World Imagery")) %>%
addCircleMarkers(label = p4h$School, radius = 7, opacity = .5, fillOpacity = .5,
clusterOptions = markerClusterOptions(showCoverageOnHover = FALSE),
popup = paste("Average pre-test score: ",p4h$Pre, "<br>", "Average post-test score: ", p4h$Post)) %>%
setView(lat = 19.01228, lng = -72.94282, zoom = 8)
# Interactive Map
library("tidyverse")
library("leaflet")
library(dplyr)
library(shiny)
library(htmlwidgets)
#p4h <- read_csv("/Users/scottmiller/Desktop/ShinyMap/P4H_coord.csv")
#  p4h <- p4h %>% separate(GPS, c("Longitude","Latitude"), sep = ',')
#  p4h$Latitude <- as.numeric(p4h$Latitude)
#  p4h$Longitude <- as.numeric(p4h$Longitude)
#  p4h <- p4h[-61,]
#write.csv(p4h, "/Users/scottmiller/Desktop/ShinyMap/P4H_coord.csv")
p4h <- read.csv("/Users/scottmiller/Desktop/ShinyMap/Data/P4H_coord.csv")
P4H_Interactive <- p4h %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addLayersControl(baseGroups = c("Toner Lite", "World Imagery")) %>%
addCircleMarkers(label = p4h$School, radius = 7, opacity = .5, fillOpacity = .5,
clusterOptions = markerClusterOptions(showCoverageOnHover = FALSE),
popup = paste("Average pre-test score: ",p4h$Pre, "<br>", "Average post-test score: ", p4h$Post)) %>%
setView(lat = 19.01228, lng = -72.94282, zoom = 8)
# Interactive Map Shiny App
library(shiny)
library(leaflet)
p4h <- read.csv("P4H_coord.csv")
ui <- fluidPage(
leafletOutput("mymap"),
p()
)
server <- function(input, output, session) {
output$mymap <- renderLeaflet({
p4h %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addLayersControl(baseGroups = c("Toner Lite", "World Imagery")) %>%
addCircleMarkers(label = p4h$School, radius = 7, opacity = .5, fillOpacity = .5,
clusterOptions = markerClusterOptions(showCoverageOnHover = FALSE),
popup = paste("Average pre-test score: ",p4h$Pre, "<br>", "Average post-test score: ", p4h$Post)) %>%
setView(lat = 19.01228, lng = -72.94282, zoom = 8)
})
}
shinyApp(ui, server)
# Interactive Map Shiny App
library(shiny)
library(leaflet)
p4h <- read.csv("Data/P4H_coord.csv")
ui <- fluidPage(
leafletOutput("mymap"),
p()
)
server <- function(input, output, session) {
output$mymap <- renderLeaflet({
p4h %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addLayersControl(baseGroups = c("Toner Lite", "World Imagery")) %>%
addCircleMarkers(label = p4h$School, radius = 7, opacity = .5, fillOpacity = .5,
clusterOptions = markerClusterOptions(showCoverageOnHover = FALSE),
popup = paste("Average pre-test score: ",p4h$Pre, "<br>", "Average post-test score: ", p4h$Post)) %>%
setView(lat = 19.01228, lng = -72.94282, zoom = 8)
})
}
shinyApp(ui, server)
rsconnect::deployApp("/Users/scottmiller/Desktop/ShinyMap")
rsconnect::deployApp("/Users/scottmiller/Desktop/ShinyMap")
cd("Users/scottmiller/Desktop/ShinyMap")
# Interactive Map Shiny App
library(shiny)
library(leaflet)
p4h <- read.csv("Data/P4H_coord.csv")
ui <- fluidPage(
leafletOutput("mymap"),
p()
)
server <- function(input, output, session) {
output$mymap <- renderLeaflet({
p4h %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addLayersControl(baseGroups = c("Toner Lite", "World Imagery")) %>%
addCircleMarkers(label = p4h$School, radius = 7, opacity = .5, fillOpacity = .5,
clusterOptions = markerClusterOptions(showCoverageOnHover = FALSE),
popup = paste("Average pre-test score: ",p4h$Pre, "<br>", "Average post-test score: ", p4h$Post)) %>%
setView(lat = 19.01228, lng = -72.94282, zoom = 8)
})
}
shinyApp(ui, server)
shiny::runApp("/Users/scottmiller/Desktop/ShinyMap")
runApp()
runApp()
runApp()
setwd("/Users/scottmiller/Desktop/ShinyMap")
runApp()
setwd("/Users/scottmiller/Desktop/ShinyMap/")
runApp()
p4h <- read_csv("/Users/scottmiller/Desktop/ShinyMap/Data/P4H_coord.csv")
p4h %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addLayersControl(baseGroups = c("Toner Lite", "World Imagery")) %>%
addCircles(label = p4h$School, radius = 7, opacity = .5, fillOpacity = .5,
clusterOptions = markerClusterOptions(showCoverageOnHover = FALSE),
popup = paste("Average pre-test score: ",p4h$Pre, "<br>", "Average post-test score: ", p4h$Post)) %>%
setView(lat = 19.01228, lng = -72.94282, zoom = 8)
p4h %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addLayersControl(baseGroups = c("Toner Lite", "World Imagery")) %>%
addCircles(label = p4h$School, radius = 7, opacity = .5, fillOpacity = .5,
# clusterOptions = markerClusterOptions(showCoverageOnHover = FALSE),
popup = paste("Average pre-test score: ",p4h$Pre, "<br>", "Average post-test score: ", p4h$Post)) %>%
setView(lat = 19.01228, lng = -72.94282, zoom = 8)
p4h %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addLayersControl(baseGroups = c("Toner Lite", "World Imagery")) %>%
addCircles(label = p4h$School, radius = 10, opacity = .5, fillOpacity = .5,
# clusterOptions = markerClusterOptions(showCoverageOnHover = FALSE),
popup = paste("Average pre-test score: ",p4h$Pre, "<br>", "Average post-test score: ", p4h$Post)) %>%
setView(lat = 19.01228, lng = -72.94282, zoom = 8)
p4h %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addLayersControl(baseGroups = c("Toner Lite", "World Imagery")) %>%
addCircles(label = p4h$School, radius = 20, opacity = .5, fillOpacity = .5,
# clusterOptions = markerClusterOptions(showCoverageOnHover = FALSE),
popup = paste("Average pre-test score: ",p4h$Pre, "<br>", "Average post-test score: ", p4h$Post)) %>%
setView(lat = 19.01228, lng = -72.94282, zoom = 8)
p4h %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addLayersControl(baseGroups = c("Toner Lite", "World Imagery")) %>%
addCircleMarkers(label = p4h$School, radius = 7, opacity = .5, fillOpacity = .5,
clusterOptions = markerClusterOptions(showCoverageOnHover = FALSE),
popup = paste("Average pre-test score: ",p4h$Pre, "<br>", "Average post-test score: ", p4h$Post)) %>%
setView(lat = 19.01228, lng = -72.94282, zoom = 8)
p4h %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addLayersControl(baseGroups = c("Toner Lite", "World Imagery")) %>%
addCircleMarkers(label = p4h$School, radius = 7, opacity = .5, fillOpacity = .5, stroke = F,
clusterOptions = markerClusterOptions(showCoverageOnHover = FALSE),
popup = paste("Average pre-test score: ",p4h$Pre, "<br>", "Average post-test score: ", p4h$Post)) %>%
setView(lat = 19.01228, lng = -72.94282, zoom = 8)
p4h %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addLayersControl(baseGroups = c("Toner Lite", "World Imagery")) %>%
addCircleMarkers(label = p4h$School, radius = 7, opacity = .5, fillOpacity = .5, stroke = F,
#clusterOptions = markerClusterOptions(showCoverageOnHover = FALSE),
popup = paste("Average pre-test score: ",p4h$Pre, "<br>", "Average post-test score: ", p4h$Post)) %>%
setView(lat = 19.01228, lng = -72.94282, zoom = 8)
p4h %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
#addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
#addLayersControl(baseGroups = c("Toner Lite", "World Imagery")) %>%
addCircleMarkers(label = p4h$School, radius = 7, opacity = .5, fillOpacity = .8, stroke = F,
clusterOptions = markerClusterOptions(showCoverageOnHover = FALSE),
popup = paste("Average pre-test score: ",p4h$Pre, "<br>", "Average post-test score: ", p4h$Post)) %>%
setView(lat = 19.01228, lng = -72.94282, zoom = 8)
runApp()
runApp()
install.packages("shinydashboard")
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
